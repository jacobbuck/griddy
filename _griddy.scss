/*!
 * Griddy - Simple grid framework fror Sass
 * https://github.com/jacobbuck/griddy
 * Copyright (c) 2017 Jacob Buck
 * Licensed under the terms of the MIT license.
 */

// Default grid direction
$griddy-direction: left !default;

// Default grid gutter width
$griddy-gutter: 0 !default;

// Helper function to parse size argument into a percentage size
// @param mixed $size Expected formats: `25%` or `1 of 4`
// @return number $size
@function griddy-size ($size) {
  @if length($size) == 3 and nth($size, 2) == "of" {
    @return (nth($size, 1) / nth($size, 3)) * 100%;
  }
  @if unit($size) == "%" {
    @return $size;
  }
  @error "$size must be either a list or number in % unit, was #{$size}.";
}

// Output styles for a grid row
// @param number $direction optional override width of grid direction
// @param number $gutter optional override width of grid gutter width
@mixin griddy-row (
  $direction: $griddy-direction,
  $gutter: $griddy-gutter
) {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
  @if $gutter > 0 {
    margin-#{$direction}: $gutter * -1;
  }
}

// Output styles for a grid column
// @param mixed $width width of column (@see griddy-size)
// @param number $direction optional override width of grid direction
// @param number $gutter optional override width of grid gutter width
@mixin griddy-column (
  $width,
  $direction: $griddy-direction,
  $gutter: $griddy-gutter
) {
  box-sizing: border-box;
  float: $direction;

  $width: griddy-size($width);
  @if $gutter > 0 {
    width: calc(#{$width} - #{$gutter});
    margin-#{$direction}: $gutter;
  } @else {
    width: $width;
  }
}

// Output offset style for a grid column
// @param mixed $offset offset of column (@see griddy-size)
// @param number $direction optional override width of grid direction
// @param number $gutter optional override width of grid gutter width
@mixin griddy-offset (
  $offset,
  $direction: $griddy-direction,
  $gutter: $griddy-gutter
) {
  $offset: griddy-size($offset);
  @if $gutter > 0 {
    margin-#{$direction}: calc(#{$offset} + #{$gutter});
  } @else {
    margin-#{$direction}: $offset;
  }
}

// Output clear style for a grid column
// @param number $direction optional override width of grid direction
@mixin griddy-clear ($direction: $griddy-direction) {
  clear: $direction;
}
